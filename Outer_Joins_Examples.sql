USE BowlingLeagueExample;

-- #########################################################################
-- 1. List the names of all teams and the names of all their 
--    members. Sort alphabetically by team name, then member
--    first name, then member last name. (3 columns, 34 rows)
-- #########################################################################
--SELECT TeamName, BowlerFirstName, BowlerLastName FROM Teams
--LEFT JOIN Bowlers ON Teams.TeamID = Bowlers.TeamID
--ORDER BY TeamName, BowlerFirstName, BowlerLastName ASC

-- #########################################################################
-- 2. List the IDs of all matches that do not have any game data. 
--    (1 column, 1 row)
-- #########################################################################

--SELECT Tourney_Matches.MatchID FROM Tourney_Matches
--LEFT JOIN Match_Games ON Tourney_Matches.MatchID = Match_Games.MatchID
--WHERE Match_Games.MatchID IS NULL

-- #########################################################################
-- 3. List the names of all teams and the total number of games they 
--    have won. Sort alphabetically by team name. Hint: All teams have 
--    won the same number of games except for two teams, who have won zero
--    games. (2 columns, 10 rows)
-- #########################################################################

--SELECT TeamName, COUNT(WinningTeamID) AS NumWin FROM Match_Games
--RIGHT JOIN Teams ON Match_Games.WinningTeamID = Teams.TeamID
--GROUP BY TeamName
--ORDER BY TeamName ASC

-- #########################################################################
-- 4. Find the IDs of all tournaments, the number of matches in 
--    each, and the number of games in each. Sort by Tourney ID from
--    lowest to highest. Hint: Tourney #11 has a different number of
--    matches than the other Tourneys #1-14. Also, the number of matches
--    should not be the same as the number of games for Tourneys #1-14. 
--    (3 columns, 20 rows)
-- #########################################################################

--SELECT * FROM Tourney_Matches


USE RecipesExample;

-- #########################################################################
-- 5. List all ingredient names that are not used in any recipes. Sort
--    alphabetically by ingredient name. (1 column, 20 rows)
-- #########################################################################

--SELECT * FROM Recipes
--INNER JOIN Recipe_Ingredients ON Recipes.RecipeID = Recipe_Ingredients.RecipeID
--RIGHT JOIN Ingredients ON Recipe_Ingredients.IngredientID = Ingredients.IngredientID



-- #########################################################################
-- 6. List all recipe class descriptions and the number of recipes for
--    each. Sort alphabetically by recipe class description.
--    (2 columns, 7 rows)
-- #########################################################################



-- #########################################################################
-- 7. List all ingredient classes and the titles of any recipes that use
--    at least one ingredient of that class, if any. Eliminate all
--    duplicates. (2 columns, 59 rows)
-- #########################################################################



USE SchoolSchedulingExample;

-- #########################################################################################
-- NOTE: Use aliases for all columns generated by aggregate functions.
-- #########################################################################################


-- #########################################################################################
-- 8. List the names and positions of all staff, and if they are faculty, list their status.
--    Sort alphabetically by status, then position, then last name, then first name.
--    (3 columns, 27 rows)
-- #########################################################################################



-- #########################################################################################
-- 9. Find the number of classes that have never been taken by a student.
--    (1 column, 1 row, value: 100)
-- #########################################################################################



-- #########################################################################################
-- 10. Find the number of classes that have been taken by at least one student. Do not count 
--    duplicates. Do NOT use GROUP BY in your answer. (1 column, 1 row, value: 32)
-- #########################################################################################



-- #########################################################################################
-- 11. List all class IDs and the total number of unique students who have taken each. Sort
--    by total students from highest to lowest, then class ID from lowest to highest.
--    (2 columns, 132 rows)
-- #########################################################################################



-- #########################################################################################
-- 12. List the subject codes of all classes that have never been taken by a student.
--    Eliminate all duplicates. (1 column, 45 rows)
-- #########################################################################################



-- #########################################################################################
-- 13. List the IDs of all faculty and the IDs of any classes that have been taught. Include 
--    faculty who have never taught a class and classes that have not been assigned a
--    faculty member. Sort by staff ID, then class ID from lowest to highest.
--    (2 columns, 134 rows)
-- #########################################################################################



-- #########################################################################################
-- 14. List the names of all faculty and the class IDs and subject codes of any classes that 
--    have been taught. Include faculty who have never taught a class and classes that have
--    not been assigned a faculty member. Sort alphabetically by staff first name, then
--    last name, then class ID, then subject code. (4 columns, 134 rows)
-- #########################################################################################



